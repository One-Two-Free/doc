update your manjaro linux
sudo pacman -Syu
 
Install Docker
sudo pacman -S docker
 
$ sudo usermod -aG docker $USER

enable docker
sudo systemctl start docker.service
sudo systemctl enable docker.service
sudo systemctl stop docker.service
 
sudo docker stats


check docker version & Info
 
sudo docker version
sudo docker info
 
try to pull hello-world
docker pull hello-world
 
run hello-world
sudo docker run hello-world
 
check command

список всех загруженных образов
sudo docker images

контейнеры список
sudo docker ps -a

удалить контейнеры все
docker container prune

зайти в контейнер
docker exec -it otus-php sh		(exec выполнить команду sh в запущенном контейнере)

запустить контейнеры в фоновом режиме используйте опцию -d  (--build заново создать образы):
docker-compose up -d --build

Остановить контейнеры, запущенные в фоновом режиме можно командой stop:
docker-compose stop


ПОДКЛЮЧЕНИЕ К КОНТЕЙНЕРУ
docker-compose exec NAME /bin/bash

docker-compose exec webserver /bin/bash
docker-compose ps


docker images [-a]	список image
docker ps   запущенные контейнеры посмотреть
docker ps -a посмотреть все контейнеры, которые остановились

docker build -t hello-world .	создать образ с именем hello-world из текущей папки
docker run --rm images	запустить образ images, -rm удалить после остановки контейнера


docker rm [ID, NAMES] удалить контейнер
docker rmi [ID, NAMES] удалить images

docker start name   запустить остановленный контейнер
docker stop остановить контейнер

docker volume ls




DKA-DEVELOP	-----------------------------------------------------------------------------------------------------------------------
sudo usermod -aG docker NAMEUSER	добавить в группу docker пользователя
docker run -it ubuntu bash		-it интерактивная работа на подключаемом терминальном устройстве

docker ps
docker ps -a 

docker run -h CONTAINER -it ubuntu bash   [-h имя хоста]
docker run --name dkadevelop -it ubuntu bash    [--name задает имя контейнера  поле NAMES]


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
docker inspect имяконтейнера	информация о контейнере
docker diff имяконтейнера		изменения в контейнере
docker logs имяконтейнера		смотреть логи, список событий в контейнере

Удаление остановленных контейннеров:
docker ps -aq -f status=exited
docker rm -v $(docker ps -aq -f status=exited) 

Получение, запуск (в фоне) и проброс.
docker run -d -p 8000:8080 bitnami/apache	[-p проброс портов host машины: порт в контейнере]



Kill and Delete Containers and Images
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
docker rm -f $(docker ps -aq)        # Delete all Containers
docker rmi -f $(docker images -q)    # Delete all Images

---------------------------------------------------------------------

Dockerfile набор операций для создания докер образа

FROM ubunty  базовый образ ОС, самая первая инструкция

команды выполняются внутри оболочки, внутри образа, [y на запросы дает да]
RUN	apt-get update && apt-get install -y cowsay && ln -s /usr/games/cowsay /usr/bin/cowsay

ENTRYPOINT ["cowsay"]		команды выполняются в контейнере


---------------------------------------------------------------------
docker-compose.yml

version: '3.1'		версия файла

services:			контейнреры которые будут запущены

	db:								контейнерам присвоены имена
		build: ./db					образ создать из Dockerfile
		image: mariadb				образ который будет использован
		restart: always				автоматический перезапуск
		environment:				переменные в среде контейнера
		  MYSQL_ROOT_PASSWORD: example		пароль для root

  	adminer:
		image: adminer
		restart: always
		ports:
		  - 8080:8080

Сокращенная запись
docker run \
	--name my-nginx \
	-v ${PWD}:/usr/share/nginx/html \
	-p 8888:80 \
	-d \
	--rm \
	nginx
