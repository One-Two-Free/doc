
sudo rmmod pcspkr

cat file1 file2   вывести содержимое файлов
	^D  в пустой строке, остановить текущий стандартный поток ввода из терминала, поток закончился
	    конец файла, eof		!!!! завершить сеанс работы терминала
	^C  принудительно завершить активную программу

	^S  остановить вывод
	^Q возобновть вывод
	^Z заморозить текущий процесс
	bg перевести в фоновую
	fg перевести  в основную

command &  запустить в фоновом режиме
jobs	список фоновых программ

ls    просмотр содиржимого папки
      -la подробный список, скрытые файлы
      -F  типы фалов

history

cp file1 file2    копировать файл
cp file1 file2 ... dir    копировать файл в папку
mv file1 file2    перенести, переименовать файл
mv file1 file2 ... dir
touch   создать файл
rm file1    удалить файл


cd            сменить текущий каталог
mkdir         создать каталог
mkdir -p      создать подкаталоги
rmdir dir     удалить пустой каталог
rm -rf dir удалить каталог и все содержимое    -r рекурсивное удаление   -f  принудительно

echo argument выводит свои аргументы в стандартный вывод

grep root /etc/passwd   вывести строки из файла или входного потока, которые соответствуют выражению
                        -i  игнор регистр символов  -v  инверсия условия, т.е. все строки не отвечающие условию

less    вывести на экран большой файл, пробел перемещение в низ, В наверх
pwd   отобразить рабочий каталог

diff  увидеть различия между двумя файлами

file name   узнать тип файла
find dir -name file -print    найти файл file в каталоге dir

head , tail посмотреть фрагмент файла или потока данных

passwd    сменить пороль

man ls 		справка
info ls
ls --help


ls > file 	направить вывод в файл file, >> чтобы оставить инфу в файле (для bash)

head /proc/cpuinfo | tr a-z 		отправить стандартный вывод на стандартный ввод др команды
ls /fffffff > f 2> e 		стандартную ошибку направить в файл e число 2 направляет стандартной ошибке

head < /proc/cpuinfo 		отправить файл на стандартный ввод команды


ps   перечень работающих процессов.  x показать все процессы пользователя	ax все процессы системы
	u детализированная информация		w полные названия команд

kill pid	заврешить процесс, по умолчанию TERM
kill -STOP pid   приостоновить процесс не завершая его, останется в памяти и ожидает повторного вызова
kill -CONT pid		продолжить выполнение этого процесса
Ctrl + C 	прерывание процесса, равносильно kill -INT
kill -KILL 	грубый способ завершения процесса, нет возможности пребрать за собой, ОС прерывает процесс и выгружает его из памяти

ctrl + z 	перевести задачу в фон	fg вывести из фона	bg перевести в фон

jobs  	просмотр остановленных задач

gunzip file.gz &	отправить задачу в фон

gzip file  сжать файл
gunzip file.gz 	декомпрессия файла file.gz

tar cvf archive.tar file1 file2 ... создает архив	с  режим создания, 
	v  подробный диагностический вывод можно два v, f файл параметр за ним следует имя файла-архива  
tar xvf archive.tar распоковать файл .tar используйте флаг x
tar tvf archive.tar посмотреть архив


stat file    вывести info из inode 
df	свободное пространство файловой системы	 -i информация об inode
ln name_file name_link		hard-link    -s   soft-link

groups  в какую группу вы входите

vim file  открыть, создать файл в редакторе vim

hexdump -C 
uname -a	система информация
which


получить sysfs-пути устройства в каталоге /dev
udevadm info --query=all --name=/dev/sda

df -T    файловая система
du -h    размер директории
rm example 2> /dev/pts/1   направить поток ошибок на терминал pts/1

mv out.txt folder1	переместить файл в папку
mv out.txt file2	переименовать файл
cp bigfile folder1/	копирвать файл

mkdir -p folder1/folder2/folder3	создать вложенные папки
rmdir -p folder1/folder2/folder3	удалить всю цепочку


ln /folder1/file1 /folder2/hardlink1	создать жесткую сылку
ln -s /home/user1/folder1/file1 sfile1	создать символьную сылку
cat > folder1/file1	создать file1 in catalog folder1

find /home -name file1	найти файл file1
find /home -samefile hfile1  найти жесткие сылки на файл hfile1
which	поиск исполняемые файлы в пути $PATH


dmesg	события ядра


# fdisk -l /dev/sda/   просмотр разделов на диске sda
# fdisk /dev/sdb       создать, работа с разделами

mkfs.ext4 -L data /dev/sdb1   создать файловую систему  -L data  - лэйбл

blkid  идентификация блочных устройства

file -s /dev/sdb1

mount /dev/sdb1 /mnt	монтировать файловую систему
umount /mnt
/etc/fstab	инструкции монтирования файловых систем во время загрузки

free   оперативная память

env список переменных окружения  
lsblk  доступные разделы


chmod g+r file 	изменить права доступа, добавить право на чтение
chmod go+r file
chmod go-r file 	удалить право
chmod 644 file 	абсолютное изменение
chmod rights dir -R – установка прав rights на всё содержимое директории dir
chmod u+x file

часто используемые права доступа
	700 – всё может делать только пользователь-владелец
	755 – пользователь-владелец может делать всё, остальные только читать и исполнять
	664 – пользователь-владелец и группа-владелец могут читать и писать, остальные только читать
	660 – пользователь-владелец и группа владелец могут читать и писать, остальные не могут ничего
	644 – пользователь-владелец может читать и писать, остальные только читать

chown user:group file – установка владельца и группы файла file
sudo chown -R raccoon:raccoon catalog	поменять пользователя и группу для catalog


chsh -s /bin/zsh	изменить оболочку текущего пользователя, после этого нужно выйти и снова войти в систему.
echo $SHELL		Переменная окружения SHELL хранит путь до исполняемого файла оболочки.
echo $0			выведет на экран имя текущего работающего процесса, внутри которого она выполнена.
cat /etc/shells		Список оболочек, которые в данный момент установлены и доступны в системе Linux
	Чтобы временно переключиться на другую оболочку, достаточно выполнить в терминале команду, соответствующую ее имени. 





