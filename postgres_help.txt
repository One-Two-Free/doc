// Login as a postgres user
sudo -ui postgres

//  enter psql as user postgres
psql -U postgres

# Create a new database user (role) with a password
CREATE ROLE myuser WITH LOGIN PASSWORD 'mypassword';

# Create a new database
CREATE DATABASE mydb OWNER myuser;

# Connect to PostgreSQL as your new user
psql -U myuser -d mydb -h localhost

-U: Specifies the username
-d: Specifies the database name
-h: Specifies the host (localhost)

#assign role createdb to user raccoondb
ALTER USER raccoondb CREATEDB;

---------------------------------------------------------------------

postgresql lesson BrianHolt

---------------------------------------------------------------------

docker pull postgres:14
docker pull btholt/complete-intro-to-sql:14

-d  detached, which means run it in the background don't run in the foreground
-p  expose this port
docker run -e POSTGRES_PASSWORD=lol --name=pg --rm -d -p 5432:5432 postgres:14

stop docker container name pg
docker kill pg

connected to postgres, -u run it as the postgres user, -it interactive, pg name of the container, psql name of the command for bash
docker exec -u postgres -it pg psql


help psql command
\?

list database
\l

\! [COMMAND]           execute command in shell or start interactive shell
\! pwd


------------ Work with table. Create, alter, insert.
CREATE DATABASE recipeguru;

switch connection
\c recipeguru

CREATE TABLE ingredients (
id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
title VARCHAR ( 255 ) UNIQUE NOT NULL
);

ALTER TABLE ingredients
ADD COLUMN image VARCHAR ( 255 ),
ADD COLUMN type VARCHAR ( 50 ) NOT NULL DEFAULT 'vegetable';

INSERT INTO ingredients (
 title, image, type
) VALUES (
  'red pepper', 'red_pepper.jpg', 'vegetable'
);

UPDATE ingredients SET image = 'watermelon.jpg' WHERE title = 'watermelon';












